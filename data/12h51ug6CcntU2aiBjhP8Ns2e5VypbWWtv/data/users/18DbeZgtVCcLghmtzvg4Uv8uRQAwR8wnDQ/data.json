{
	"next_comment_id": 10,
	"user_name": "jro",
	"hub": "1GrEenUGRWnzaNZjR3XsQa6dQgdPDTyt7i",
	"post_like": {
		"17ZpR34ZXhaW42o2Rw9DKFkQZoPNY3UiUx_1486608534": 1486611478,
		"1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh_1493990589": 1493993149,
		"1PSaHi14Xh4Kjo3yyjDgbRtj4YLQgWV4QJ_1495212582": 1495293091,
		"1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh_1500184076": 1500207828,
		"1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh_1500204302": 1500208155,
		"1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh_1502872441": 1502955569,
		"16shzERdwhhJAWuUvDZGQYRRpi2YQp5fDB_1504202470": 1504261567
	},
	"comment": [
		{
			"comment_id": 1,
			"body": "Welcome to spammer world. Too many messages and other users may choice not to see and distribute your posts, but the messages will not be deleted :-)",
			"post_uri": "1KC2aohuaiYueSGZPheBb4zZaC439d5AL9_1499855048",
			"date_added": 1499861982
		},
		{
			"comment_id": 2,
			"body": "Yah. Having \"big\" problems here with new rules for optional files patterns (https://github.com/HelloZeroNet/ZeroNet/issues/989). 2 sites down here :-( Do not like updates that \"destroys\" old zites :-( Can be fixed but extra work",
			"post_uri": "1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh_1500184076",
			"date_added": 1500207822
		},
		{
			"comment_id": 3,
			"body": "@Jayofthezero: I have been using exact pattern to match optional files. E.g. \"optional\": \"([0-9]{13}-[0-9]{13}-[0-9]+-chat.json|[0-9]{13}-image.json|[0-9]{13}-[0-9]+-image.json|[0-9a-f]{10}.[0-9]{13})\" in user content.json files. Repeaters in regular expressions as \"{n}\" are no longer allowed. Error \"Potentially unsafe part of the pattern\". Now just using .*[0-9].* as pattern as all my optional files have digits in filenames. Plus some javascript validation just to avoid issues with strange optional filenames ... ",
			"post_uri": "1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh_1500184076",
			"date_added": 1500214558
		},
		{
			"comment_id": 4,
			"body": "@Kaffie: Some regular expressions with a big input can consume all memory and CPU resources on a system (UI server). So 'unsafe' = 'resource consuming'. But I do not think the best solution is to implement restrictions on regular expressions in ZeroNet. Should have been solved in python (timeout after x milliseconds) or maybe restriction on input length. Love regular expressions and do not like the new restrictions. Looks like a bird with a broken wing ...",
			"post_uri": "1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh_1500184076",
			"date_added": 1500275803
		},
		{
			"comment_id": 5,
			"body": "@Nofish: Is regular expressions in UI server always used for filenames? What about a max length on filenames instead of restrictions on regular expressions? There should be few very long filenames on ZeroNet. 5000 characters?  OK. Can see that a max length on filenames not solves the issue https://swtch.com/~rsc/regexp/regexp1.html",
			"post_uri": "1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh_1500184076",
			"date_added": 1500281333
		},
		{
			"comment_id": 6,
			"body": "The real ID is the auth_address. cert_user_id is a text field. I think you could write anything in cert_user_id. It is \"easy\" to create your own ID provider. But a site like ZeroMe supports only a few safe ID providers. I have tried using ZeroMe with my own ID provider MoneyNetwork. No errors but the posts are not distributed.",
			"post_uri": "12gAes6NzDS9E2q6Q1UXrpUdbPS6nvuBPu_1501788623",
			"date_added": 1501829105
		},
		{
			"comment_id": 7,
			"body": "Do you have a list? I have downloaded emojis icons for 8 providers to ZeroNet. Could be \"fun\" to add some more later.",
			"post_uri": "1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh_1502872441",
			"date_added": 1502955558
		},
		{
			"comment_id": 8,
			"body": "@Kaffie: Thanks for sharing. Have added your list to my issue list :-) ",
			"post_uri": "1NWh3WAty57FH8at1WtrZigMrdhrDkuPzh_1502872441",
			"date_added": 1502963514
		},
		{
			"comment_id": 9,
			"body": "Very shy 9.499 users .....",
			"post_uri": "1PSaHi14Xh4Kjo3yyjDgbRtj4YLQgWV4QJ_1506415724",
			"date_added": 1506442570
		}
	]
}