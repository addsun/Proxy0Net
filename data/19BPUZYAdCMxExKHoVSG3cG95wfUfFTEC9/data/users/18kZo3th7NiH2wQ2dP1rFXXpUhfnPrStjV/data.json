{
	"next_topic_id": 5,
	"topic": [
		{
			"topic_id": 1,
			"title": "一起来慢慢从零(网)开始学习编写g++翻墙windows代码",
			"body": "#欢迎大家从零开始研究并讨论用最简单的编程翻墙软件。\n1. 首先，为了所有人都可以编程，并且程序的性能高，我选择小巧的Code::Blocks，g++编译器。\n   - 因为这个对电脑的性能要求不高，而且很接近控制系统内核。\n   - 既不像微软编译器好几G，又接近机器语言的一种语言。\n   - 大家有没有兴趣一起研究一下怎么写个翻墙软件？\n- 自己一个人写太累，且要考虑和研究的东西太多，必竟我们几乎算是零起步。\n- 我希望先从socket接口TCP/IP协议开始写，研究一下如何加密协议/内容，比如如何把协议流拆开，协议流如何简单的用c++命令管理，我打算用tcp协议。\n   * 我用socket接口写过简单的c++网络聊天程序，但是没有详细研究过socket用c++在windows系统下发出去，具体是什么样的，如何编个程序去看一下自己写的数据流在internet里的真实样子，书上写的，我认为不一定是100%的数据流的样子，真想看到数据流的样子，必需要自己去写程序看。\n   * 按理说，只要研究清socket接口的网络数据流在网络里的全长、真实的数据格式，如何真实的控制协议的长度和加密数据内容，我想就可以写出来一个翻墙软件了。\n        * 其它的问题，就是要写个软件的可视化窗口，一些方便的指令菜单，和一些方便的工具：比如二维码，配置导入等功能。\n* 我希望能在这个基础上，把翻墙的socket数据流加密角本编程化，自己写角本去控制socket数据流的各种拆分加密方法，而翻墙软件去执行这个角本实现角本所定义的数据流操作方案。让每个用户的数据流都没有一样的特征。\n    * 这个最难的关键点就是在socket的网络数据流到底是个什么样的重点上。一旦知道了socket里的`tcp/ip`数据流的具体情况，用g++在windows系统下；就好写出翻墙软件了。\n         * 所以重点是研究清windows系统下C/C++语言操作socket真实数据流的真实方法。\n         * 希望不要说一些不懂的太专业的术语，用一些简单直接的大白话来一语中地，windows下用C/C++操作socket数据流的所有核心技术。\n#😆 😆 😆 😆 😆 😆 ",
			"added": 1509797053,
			"parent_topic_uri": "10_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 2,
			"title": "不可思议原来是这意思",
			"body": "计数单位依次为[2] \n个、十、百、千\n万、十万、百万、千万\n亿、十亿、百亿、千亿\n兆、十兆、百兆、千兆\n京、十京、百京、千京\n垓、十垓、百垓、千垓\n秭、十秭、百秭、千秭\n穰、十穰、百穰、千穰\n沟、十沟、百沟、千沟\n涧、十涧、百涧、千涧\n正、十正、百正、千正\n载、十载、百载、千载\n极、十极、百极、千极\n恒河沙、十恒河沙、百恒河沙、千恒河沙\n阿僧祗、十阿僧祗、百阿僧祗、千阿僧祗\n那由他、十那由他、百那由他、千那由他\n不可思议、十不可思议、百不可思议、千不可思议\n无量、十无量、百无量、千无量\n大数、十大数、百大数、千大数 ( 以上进位为中数)\n详细资料编辑\n10^1048567 (上数)10^75(中数)：千大数\n10^524288(上数) 10^72(中数)：大数\n10^262144(上数) 10^68(中数)：无量\n10^131072(上数) 10^64(中数)：不可思议\n10^65536(上数) 10^60(中数)：那由他\n10^32768(上数) 10^56(中数)：阿僧祗\n10^16384(上数) 10^52(中数)：恒河沙\n10^8192(上数) 10^48(中数)：极\n10^4096(上数) 10^44(中数)：载\n10^2048(上数) 10^40(中数)：正\n10^1024(上数) 10^36(中数)：涧\n10^512(上数) 10^32(中数)：沟\n10^256(上数) 10^28(中数)：穰\n10^128(上数) 10^24(中数)：秭\n10^67(上数) 10^23(中数)：千垓；\n10^66(上数) 10^22(中数)：百垓；\n10^65(上数) 10^21(中数)：十垓；\n10^64(上数) 10^20(中数)：垓\n10^35(上数) 10^19(中数)：千京\n10^34(上数) 10^18(中数)：百京（E）\n10^33(上数) 10^17(中数)：十京\n10^32(上数) 10^16(中数)：京\n10^19(上数) 10^15(中数)：千兆（P）\n10^18(上数) 10^14(中数)：百兆\n10^17(上数) 10^13(中数)：十兆\n10^16(上数) 10^12(中数)：兆\n10^11：千亿\n10^10：百亿\n10^9：十亿（G）\n10^8：亿\n10^7：千万\n10^6：百万 (M)\n10^5：十万\n10^4：万\n10^3：千 (K)\n10^2：百\n10^1：十\n10^0：一\n10^-1：分 (d)\n10^-2：厘 (c)\n10^-3：毫 (m)\n10^-4：丝\n10^-5：忽\n10^-6：微 (μ)\n10^-7：纤\n10^-8：沙\n10^-9：尘（n）\n10^-10：埃\n10^-11：渺\n10^-12：漠（p）\n10^-13：模糊\n10^-14：逡巡\n10^-15：须臾\n10^-16：瞬息\n10^-17：弹指\n10^-18：刹那（a）\n10^-19：六德\n10^-20：虚空\n10^-21：清净（z）\n10^-24：涅槃寂静\n(上数以亿进位,中数以万进位,现今生活中经济计数以中数进位计数)\n* 1G的记忆体可以存多少个罗马字：5亿\n* 构成一个人体的细胞总数：大约10兆\n* 地球上的昆虫个数：大约100京\n* 全世界的沙滩总共有多少粒沙子：大约100垓\n* 52张扑克牌的排列组合的总数：1000不可思议\n##涅盘寂静，这个数字是10的-24次方，也就是这个数字有多小！？\n* 投掷一枚硬币，连续 80 次同一面朝上的机率是1涅盘寂静，\n##这，就是涅槃寂静的境地！",
			"added": 1510074863,
			"parent_topic_uri": "12_1NV87VmSkezRyz8NbFpdkYJsJUSfXx7LJa"
		},
		{
			"topic_id": 3,
			"title": "ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้",
			"body": "ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้",
			"added": 1511514860,
			"parent_topic_uri": "1_1JtWpPB5q8EjDbUmyZXKYS6vkKrix9h8s7"
		},
		{
			"topic_id": 4,
			"title": "ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้",
			"body": "ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้ฏ๎๎๎๎๎๎ด้้้้้็็็็็้้้้็็็็็ฏ๎๎๎๎๎๎๎๎๎ฏ๎ฏด้้้้้็็็็็้้้้้็็็็็้้้้้็็็้็็็ฏ๎็็็็็็oด้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็้้้้้้้้็็็็็้้้้้็็็็็็็็้้้้้็็็็็้้้้้้้",
			"added": 1511514924,
			"parent_topic_uri": "57_13Z7XxTa7JuFat3KzzMWu3onwM6biLuurJ"
		}
	],
	"topic_vote": {},
	"next_comment_id": 81,
	"comment": {
		"9_14YVZ2ZtM9nPHP5KTnRThVDBAeb2juw829": [
			{
				"comment_id": 1,
				"body": "可用",
				"added": 1509794636
			}
		],
		"1_18kZo3th7NiH2wQ2dP1rFXXpUhfnPrStjV": [
			{
				"comment_id": 2,
				"body": "#首先，先装编程软件吧。\nhttp://sourceforge.net/projects/codeblocks/files/Binaries/16.01/Windows/codeblocks-16.01mingw-setup.exe\n#我装的是这个，自带g++编译器的。",
				"added": 1509798106
			},
			{
				"comment_id": 3,
				"body": "> [mcloud](#comment_10_1975Z5g8hZhSj8sco2sp5yz8gTV1NDRc4G): 支持，不过建议你好好排版一下，看着有点乱。\n\n#我的美工不是很好。:(",
				"added": 1509798125
			},
			{
				"comment_id": 4,
				"body": "#我是个不太会工整写代码的人。至少是用看不懂的大佬写法，还是用同样看不懂的差美工的代码，而我选择后者，因为我不是大佬。\n#我没有大佬那样华丽的看不懂的高深莫测代码风格和华丽的功能\n#我只有乱七八糟同样看不懂的排版“风格” o -_-)=○)°O°) 给你一拳！ \n#说我好也不高兴，说我不好也不高兴，没有人来我还是不高兴，我怀疑我是个纠结的人！",
				"added": 1509798445
			},
			{
				"comment_id": 5,
				"body": "#好了，现在编译器，我们安装好了，就先从命令行去研究一下socket套接字的tcp协议如何在windows下用g++去写个开始吧。",
				"added": 1509798535
			},
			{
				"comment_id": 6,
				"body": "#我想到以前是用udp协议写的络网聊天程序，而现在upd听说已经被墙了。所以我选择了tcp协议，不过tcp有个握手，我用upd可以实现两个不同局域网内电脑通过internet互通，也就是可以穿破路由器进行互通。\n#所以我们需要的是，服务器那边自然不是在局域网里的，有公网ip。所以服务器的端口可以直接看见，没有路由挡着。\n#用户端这边多数现在都在路由里，所以我们需要穿路由。\n#我以前这样写，因为服务器是个公开的机器，所以从客户端向服务器指定端口发tcp请求，服务器接到我的信号后就会从我发的tcp里的原地址知道我的ip和我是从哪个端口发来的，这个端口如果有路由，就是路由的端口，不是我电脑的。而tcp从我电脑发出去，经过路由时，路由会分配一个路由的端口给这个程序，并记住，而也同样记住我的电脑是从哪个端口发给路由的tcp，并记下我的局域网里的ip，这样服务器传回给这个路由的发送端口里，路由就会知道把这个tcp数据流给局域网里的哪个ip的电脑，和这个电脑的哪个端口上。其实现在不用管太多的路由后的事，只要知道出口路由就行，路由里还有路由也没事，他们都会这样去一层层的记录具体路线，路由程序会自动完成的。",
				"added": 1509799229
			},
			{
				"comment_id": 7,
				"body": "#我不是编程大佬，所以我去google一下g++在windows下写socket的小例子。看完回来把我代码贴上来。",
				"added": 1509799726
			},
			{
				"comment_id": 8,
				"body": "#看了一下Code::Blocks，g++编译器 C:\\Program Files (x86)\\CodeBlocks\\MinGW\\include 目录里有个winsock文件，至少知道，g++有能力操控socket了。那么我再去google一下，有什么例子看。",
				"added": 1509800153
			},
			{
				"comment_id": 9,
				"body": "#命令行操控socket也是可以的嗯，不用装什么微软几个G的编译器也可以操控socket嗯，毕竟socket是windows拥有的，mingw也只是去操作一下windows内核，所以mingw只需要有个socket库去控制windows就行了。希望mingw库是跨平台的，不是也没关系了，先从windows下手吧。我去伸我的爪子去",
				"added": 1509800213
			},
			{
				"comment_id": 10,
				"body": "`C:\\Program Files (x86)\\CodeBlocks\\MinGW\\lib\\libwsock32.a`\n链库也有，应该是没错，能控制socket，不过我是64位windows，希望不会出什么不希望出现的东西让我恶心。",
				"added": 1509800393
			},
			{
				"comment_id": 11,
				"body": "突然想到我没有服务器。先去看看代码吧，服务器再说。\n(反正我是绝对买不起服务器的，先写代码吧。服务器的事，总之我是没有办法，写代码还是可以写的。错了也没办法，吊丝穷就是这样了。)",
				"added": 1509801011
			},
			{
				"comment_id": 12,
				"body": "> [mcloud](#comment_13_1975Z5g8hZhSj8sco2sp5yz8gTV1NDRc4G): 不是美工不美工的问题，我很欣赏你想要分享经验的做法，但是你的帖子格式不好，显得乱糟糟的，就不容易让人看得下去嘛，对吧？也不是说要你怎么工整……做的不好，可以慢慢改进呗\n> 关于排版之类的，网上有很多Markdown的教程，比如 http://www.appinn.com/markdown/ 。\n\n# 可是排版是个高大尚的东西，不适合我：（",
				"added": 1509801460
			},
			{
				"comment_id": 13,
				"body": "> [mcloud](#comment_11_1975Z5g8hZhSj8sco2sp5yz8gTV1NDRc4G): 如果用的是win10，可以考虑用自带的Subsystem for Linux\n\n# win7 64",
				"added": 1509801488
			},
			{
				"comment_id": 14,
				"body": "> [mcloud](#comment_12_1975Z5g8hZhSj8sco2sp5yz8gTV1NDRc4G): 别这么通过回复说步骤， 直接编辑你的贴子吧。\n\n# 编贴子太高大尚对我:(",
				"added": 1509801542
			},
			{
				"comment_id": 15,
				"body": "> [mcloud](#comment_14_1975Z5g8hZhSj8sco2sp5yz8gTV1NDRc4G): 别这么说，请你不要拒绝学习和改进。并且，你的帖子格式越好，越有人来看，你的工作和分享就越有价值，何乐而不为呢？\n\n# 我根本就不懂什么叫好看:(",
				"added": 1509801621
			},
			{
				"comment_id": 16,
				"body": "好了，找到一个例子，先建个新项目，**打开code::Blocks->File->New->Project...，打开New from template窗口，Category:选<All categories>，在下面窗口选Console application，点按钮Go。然后一直下一步，给程序起个名字就可以了。**",
				"added": 1509801846
			},
			{
				"comment_id": 17,
				"body": "> [mcloud](#comment_15_1975Z5g8hZhSj8sco2sp5yz8gTV1NDRc4G): 去看看别的帖子嘛，比如说 http://127.0.0.1:43110/NewGFWTalk.bit/?Topic:37_13Z7XxTa7JuFat3KzzMWu3onwM6biLuurJ/+FAQ+6+1+Update+Freenet+VPS+ZeroNet+com+bit看人家是怎么编排的。\n> 再说了，学习就是弄懂自己原来不懂的东西啊，一开始就懂的，有什么好再学的……\n\n#看了，学不会：（",
				"added": 1509802124
			},
			{
				"comment_id": 18,
				"body": "我来说一下我找到的例子（编译通过了）：\nhttps://github.com/ApOgEE/mingw-c-socket/blob/master/main.c\n这里有一个问题，把这个代码全复制到刚刚新建的main.cpp文件里去，记得把原main.cpp的内容清空。\nCtrl+F9或选菜单build->build。这时出现了报错。我查了一下这里有个答案https://stackoverflow.com/questions/11497160/codeblocks-and-boost-asio-it-just-wont-work\n不过呢，它这原理是对的，具体有点错，具体这样改：\n**菜单Settings->Compiler...->选Linker settings->在Link libraries:里选Add（编译缺少两个链库libws2_32.a，libwsock32.a都在...CodeBlocks\\MinGW\\lib里）**（可能是因为编译器版本不同吧，所以上面那个stackoverflow上讲的文件名不一样，这个不重要啦），再**编译->通过。执行。**程序正常执行（看到了服务器连接成功，反回服务器网页http内容，因为是80端口嘛，网页服务端口啦，以后再说改别的端口的问题啦）。\n好了。今天是不是有点累，要不休息一下，回来再研究这段代码的具体如何操作socket的tcp呢！？\n吐糟：为什么编译器自带的库还要在编译时指定一下，一点也不智能化，那我想用哪个库，都要自己加链库，可是明明我都指定了.h库了，编译器是傻X吗，.h库名都这么名显了，你要用哪个.a（其实这就是一种.lib库文件）还要我去指定...:(，记得.h里不是有调链库的程序吗，记得以前写算法也没让自己指定啥库，我都指定了.h了，相对应的.a，还是你g++自己的链库，我又没有用第三方库，你还要我自己去指定，害的我还去google了，其实说你这g++编译器的可视化成度并不比我的吊丝排版好看到哪去。为什么总是这样刁难我。感觉世界对我不公平:(",
				"added": 1509804419
			},
			{
				"comment_id": 19,
				"body": "> [mcloud](#comment_17_1975Z5g8hZhSj8sco2sp5yz8gTV1NDRc4G): 嘛 多说无益。我不会再回复了。\n\n~~为什么非要排版，就不可以好好生活了吗？~~",
				"added": 1509804485
			},
			{
				"comment_id": 20,
				"body": "> [mcloud](#comment_17_1975Z5g8hZhSj8sco2sp5yz8gTV1NDRc4G): 嘛 多说无益。我不会再回复了。\n\n~~你是在威胁我吗？不会排版就不是人了吗？就不可以活了吗？就是坏人吗？就要被诅咒吗？~~",
				"added": 1509804615
			},
			{
				"comment_id": 21,
				"body": "~~我这样在下面回复，只是想把整个过程，很明显的让人知道是什么样的。这样能看到每一步，每一时期，的思想变化和操作过程。\n用啥markdown语法衣服啥的，穷吊丝表示没钱买“衣服”。~~",
				"added": 1509805745
			},
			{
				"comment_id": 23,
				"body": "> [sendmefly](#comment_54_15veLatSdM1bDkPzfQ13NGY4urYWFYvvDU): C++语言？这个太高大上，我还是玩脚本语言简单一点。其实无所谓语言的好坏，只要达到功能就行。\n\n~~额，我只是一直装着C++编译器...，当除只是因为它通用性很好，才选的它...我是无辜的！因为C++很稳定，不会有流行和不流行的说法，什么时候，c++都可以用来编程。我是无辜的！\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaah 我是谁，谁是我，我在哪？\n脱离广大群众！(⊙_⊙)?~~\n",
				"added": 1509811859
			},
			{
				"comment_id": 24,
				"body": "~~写个程序，还要拿排版和美工的钱。这年头，当一个演员才有出路。貌似我不是个戏子。可能永远也不懂戏子心。~~",
				"added": 1509852243
			},
			{
				"comment_id": 25,
				"body": "我又来BB了。\n刚看了一下这段例子代码。\n发现他是一段获取80端口http应用层协议内容的程序。说白了就是获取网页html内容的程序。\n原因是，我把host = \"www.ultratone.com.my\";这行代码改成www.youtube.com，就返回不出来任何http原码内容。\n我就又改成www.baidu.com，结果马上返回了我一大堆http原码内容。\n这说明www.youtube.com的80端口和地址都被墙了，而www.baidu.com没有被墙，所以可以连接到服务器地址的80端口上，可以进行socket的tcp连接。\n不要小看这一小段代码，他的功能已经实现了服务器端的获取网页内容的功能，因为服务器访问www.youtube.com时不会被中国的GFW防火长城墙，因为服务器一般都是在国外的，中国防火墙是不可能去阻止外国的电脑去上youtube的。\n所以这段小代码，我们可以改一下，给程序再加一段建立新socket端口的小程序，这个socket端口是与你的国内电脑相连接的。这么说吧，因为这个服务器ip地址，GFW一般是不会屏蔽的。其实就算屏蔽，用个socks代理服务器，也可以绕过GFW的屏蔽去访问服务器的ip地址。\n所以现在问题就来了，要怎么去写这段代码，你的电脑怎么和服务器进行socket的tcp连接。连接上，怎么把你在浏览器地址栏里输入的www.youtube.com这个字符串，让服务器去按这个地址去取回html内容再通过这个socket的tcp通道送给你的电脑浏览器上，让你的浏览器去显示出www.youtube.com的html内容，就成了你看到的youtube网页了。\n所以说，怎么让你在浏览器地址栏里输入www.youtube.com回车后，www.youtube.com字符串送给你电脑上写的程序呢，再让你的程序通过socket的tcp通道发给服务器，让服务器去上youtube再返回youtube的网页内容给你电脑上的程序，然后再让你电脑上的程序把网页内容给浏览器呢？\n下面画个访问整个过程的草图：**浏览器->你电脑上的程序->服务器的程序->youtube网站->服务器的程序->你电脑上的程序->浏览器->最终看到了youtube网站。**\n嗯，所以说，关键问题是，我们在浏览器里输入www.youtube.com地址回车后，怎么让不同的浏览器都把请求youtube的信号送给你电脑上的程序呢。其实这个问题挺弱智的。浏览器本身有个功能，就是可以设置本地地址和端口成一个代理服务器，我们只需要设置一下比如：**地址127.0.0.1，端口1080。**这时再在浏览器输入www.youtube.com地址回车后，浏览器并不会把这个请求地址送给www.youtube.com了，而是送给了127.0.0.1:1080，这时呢，我们只需要在我们的本地程序写一个小小的c++程序去监听我们自己电脑的1080端口，我傻傻的想，用socket的tcp去和这个1080端口握手建立连接就可以了，原因是这时1080端口默认有socks的功能，当1080有数据时，就接收过来，这时你就可以给这个数据加个密，然后包起来，通过已经建立好的socket的tcp通道发给你的服务器了。你的服务器接收到这些数据包，打开解密，这时已经出了包围圈了，就可以大胆的去访问客户端发来的数据内容所指定的地址和请求了。等服务器收到了浏览器想要的网页内容，再打包加密送回给客户端程序就可以了，客户端程序收到数据包，打开解密再发给自己电脑的1080端口，这时我们的浏览器早就在windows系统自己的代理程序正在监听本地的1080端口，一发现有数据来了，马上就开始工作，把这个数据在浏览器里显示了出来。\n这就是一个翻墙的全过程了。我想这方法肯定行。\n好了，有时间去写这段小代码了，不过我还是没有服务器啊。哭，我该怎么去写呢。额",
				"added": 1509874357
			},
			{
				"comment_id": 26,
				"body": "> [fifth](#comment_8_1MWSNceME6iwM3ckzH7WcWoL9Vw5o4skT9): 支持知識普及。\n\n#你好南方伙伴:)",
				"added": 1509877723
			},
			{
				"comment_id": 27,
				"body": "#唉，想来想去，我能想到的只有用自己的电脑又当客户机，又当服务器了，开两个本地端口,一个端口当服务器，一个端口当客户机，互撸。感觉很猥琐\n#用翻墙的小程序上一些国内网站。理论上是可行的。",
				"added": 1509878658
			},
			{
				"comment_id": 28,
				"body": "> [fifth](#comment_8_1MWSNceME6iwM3ckzH7WcWoL9Vw5o4skT9): 支持知識普及。\n\n~~也谈上不普及，算是菜鸡互勉~~",
				"added": 1509878998
			},
			{
				"comment_id": 29,
				"body": "#为了我们更好的研究这个小程序，我把Code::Blocks编写的c++程序打包上传到了githubhttps://github.com/littleguyy/mingw-c-socket-\n#可以下载下来.zip文件，解压后用Code::Blocks打开工程文件就能看到小程序了。\n#这个程序是可执行的。",
				"added": 1509892949
			},
			{
				"comment_id": 30,
				"body": "#嗯，又来瞎BB喽，本地那个1080端口，我想是浏览器自己开一个本地socket tcp端口再发给本地的1080端口，然后在自己开的那个socket端口上等1080端口传回来网页内容。所以客户端这边，现要把客户端程序写成一个本地服务器代理。然后，再把数据发到真正的服务器的端口上。所以说客户端这个程序实际上就是一个代理服务器程序。我发现我就是个写代码的啊。以后要是有啥交流什么的，我看我是不行的。如果哪天我写完程序。我想我可能就不会再露面了。以后的程序你们就自己改吧。我就去干别的了。",
				"added": 1509907003
			},
			{
				"comment_id": 31,
				"body": "瞎BB：很多同学都可能在学校学过或曾经看过tcp/ip协议这些书吧。可是在不同的操作系统平台和编译器里到底是用什么命令去操作的呢，到底是不是真的和书上说的一模一样，书上的是不是已经陈旧了呢。\n好吧，我们自己来试一试就知道结果了。\n首先，作为一个只会瞎BB的人，又去google了一下，看看别人是怎么接收指定本机端口的程序。\nhttp://blog.csdn.net/qq_18297675/article/details/51052189\n它的重点在这：\n    `SOCKADDR_IN ServerAddr = { 0 };//服务端地址`\n    `SOCKADDR_IN ClientAddr = { 0 };//客户端地址`\n    `USHORT uPort = 18000;//服务器监听端口`\n    `//设置服务器地址`\n   ` ServerAddr.sin_family = AF_INET;//连接方式`\n   ` ServerAddr.sin_port = htons(uPort);//服务器监听端口`\n    `ServerAddr.sin_addr.S_un.S_addr = htonl(INADDR_ANY);//任何客户端都能连接这个服务器`\n\n   `//绑定服务器（看到了吧，他把指定端口插到新建的socket上了。）`\n    `if (SOCKET_ERROR == bind(ServerSocket, (SOCKADDR*)&ServerAddr, sizeof(ServerAddr)))`\n所以，我们可以用这法去把ie本地代理的，比如是1080端口，插到我们自己新建的socket上\n可能有人说，这不是g++编译器的东东，好吧，那我们再看看g++编译器官方的例子吧：\n    `SOCKADDR_IN sin;`\n    `SOCKET s;`\n   ` u_short alport = IPPORT_RESERVED;`\n\n    `sin.sin_family = AF_INET;`\n    `sin.sin_addr.s_addr = 0;`\n    `for (;;) {`\n       ` sin.sin_port = htons(alport);`\n        `if (bind(s, (LPSOCKADDR)&sin, sizeof (sin)) == 0) {`\n           ` /* it worked */`\n       ` }`\n        `if ( GetLastError() != WSAEADDRINUSE) {`\n            `/* fail */`\n       ` }`\n        `alport--;`\n       ` if (alport == IPPORT_RESERVED/2 ) {`\n            `/* fail--all unassigned reserved ports are */`\n            `/* in use. */`\n        `}`\n    `}`\n以上是同理论的东西，请自行脑补。\n好了，BB完了。",
				"added": 1509943562
			},
			{
				"comment_id": 32,
				"body": "#瞎BB：发现连接另一ip地址端口用connect叫法。连接本地ip地址端口叫bind。其实意思都一样，一个是和别的电脑端口连，一个是和自己电脑端口连。别让什么专业名词什么的把脑仁弄乱了。",
				"added": 1509944362
			},
			{
				"comment_id": 33,
				"body": "#BB瞎：我为什么要BB指定端口本地的绑定呢，其实就是因为ie设定的那个叫本地代理的东西。怎么让我们的程序去接收那个ie指定的本地端口的访问网站的数据的问题。这样我们才能写一个本地代理服务器程序。当我们在浏览器地址栏里输入www.youtube.com回车后，我们就可以在本地的1080端口上收到这些数据指令了。这样我们才能做好本地代理服务器程序的工作。\n#如果没法和本地指定的端口建立连接，我们只建个socket和谁去交流。socket只是一个插座，",
				"added": 1509945081
			},
			{
				"comment_id": 34,
				"body": "> [fengyun007](#comment_45_12pu2MFpjqWpNd4TqLC6edzMtEczQ2vLti): 你排版不好没事，我愿意看。\n\n~~为啥总提排版~~",
				"added": 1510028037
			},
			{
				"comment_id": 35,
				"body": "~~你说，我要真长的不好看，你非要我化妆，就能变好看了？~~",
				"added": 1510028358
			},
			{
				"comment_id": 36,
				"body": "> [amayadream](#comment_2_1JC6zZA7AwZa91MxATfd4sNrJrY2nU8qcJ): 因为排版能提高读者的阅读效率, 才能让更多的人快速理解你的意图. 这一点和代码很像, 程序员写出的代码首先是给人看的, 其次才是交给机器执行开源项目也是这样, 你看github上的pull request/issue这些都是有明确的规范, 你必须按照标准来执行. 你这个排版乱糟糟的怎么能让人觉得你的项目能持久?\n\n~~可是乱糟糟的杂草已经存在了上亿年，园林草只存在了几百年。~~",
				"added": 1510031949
			},
			{
				"comment_id": 37,
				"body": "~~园林草只能活在人类的环境里，而杂草可以活在自然里。没有了人类，园林草慢慢就会被大自然同化成杂草。\n生命力最旺盛的还是能适应自然的杂草。~~",
				"added": 1510032497
			},
			{
				"comment_id": 38,
				"body": "~~所以，你是想做一个在自然中自由自在生活的杂草，还是喜欢生活在“你的造物主”的人造环境里？~~",
				"added": 1510032626
			},
			{
				"comment_id": 39,
				"body": "~~如果你确信，你的造物主都是对的，那为啥很喜欢自然中去呼吸那没有PM2.5的造物主野生君~~",
				"added": 1510033165
			},
			{
				"comment_id": 40,
				"body": "~~呼吸造物主PM2.5化妆品很好吗~~",
				"added": 1510033256
			},
			{
				"comment_id": 41,
				"body": "~~你是喜欢躺在人造的病床上吸痒，还是喜欢在田野里吸自然非人造无人造污染的空气~~",
				"added": 1510033428
			},
			{
				"comment_id": 42,
				"body": "#不过我没说我这是什么好东西，有没有毒，大家自己掌握吧。\n#看不看和我没啥关系，要是这里管理员不让写，我就不写。\n#没说，我写我的，请不要干扰我自己的贴子。",
				"added": 1510034250
			},
			{
				"comment_id": 43,
				"body": "#写程序还要遵守格式？不遵守格式就不长远。这都哪挨哪啊。想不想写程序和格式有什么关系。有的是理由不去继续写一段程序。写程序和随机数没有区别。没有哪种原因可以固定写一个程序需要什么理由，不写一个程序需要什么理由。哪来的这么多理由。",
				"added": 1510052846
			},
			{
				"comment_id": 44,
				"body": "#如果有人很喜欢说什么格式和规矩，那我也可以说不遵守我的规矩也是不行的喽？\n#那就都去遵守国家法律，别翻墙。还写个什么软件。这么喜欢遵守规矩。",
				"added": 1510053301
			},
			{
				"comment_id": 45,
				"body": "#最好连zeronet也不要上，因为这也是违法的喽。",
				"added": 1510053337
			},
			{
				"comment_id": 46,
				"body": "#话说SS作者遵守规矩吗？\n#反正我知道他自己的代码软件被删了。\n#也没长远",
				"added": 1510054622
			},
			{
				"comment_id": 47,
				"body": "#SSR作者，GoAgent作者，他们的软件遵不遵守规矩，代码好不好看。一样全都删了。\n#好看就能保证长久？中国有哪个好看的软件存活到现在，现在中国的软件全都是垃圾广告，装国产软件就跟装了一个大礼包一样，整个电脑都用不了了，删都删不掉。\n#真不明白，玩个玩具还要被人指指点点。\n#Code::Blocks和玩具有什么不同，多好玩的一个文字积木啊。",
				"added": 1510056661
			},
			{
				"comment_id": 48,
				"body": "> [birdvd](#comment_35_1Ko7622HKggRGbJny5hCS4n9wwMAVVLTSf): 楼主淡定～\n\n#嗯，好的噢。",
				"added": 1510058683
			},
			{
				"comment_id": 49,
				"body": "好了，我再来几句，我发现，我不是很了解http协议。那么做为一只小菜，我又要去google一下了，先找个简单点的吧。\nhttp://caibaojian.com/http-protocol.html\n这个还算能看懂一些吧。\n这里的`6.5、HTTP常见的请求头（在HTTP/1.1 协议中，所有的请求头，除Host外，都是可选的）`，\n看来c代码里的`char *tpl = \"GET /%s HTTP/1.0\\r\\nHost: %s\\r\\nUser-Agent: %s\\r\\n\\r\\n\";`这段代码中的`Host:%s\\r\\n`是个必选项噢。\n`GET /index.html HTTP/1.1`这个说明`GET /%s`这个`/%s`是个目录，是浏览器要访问的服务器网址目录啦。（**不过貌似这个目录也是必选的吧，不是很清楚，我好像把它去掉后，编译后，请求出错了**）",
				"added": 1510059035
			},
			{
				"comment_id": 50,
				"body": "Code::Blocks支持在程序里想要停止的代码行上设置停止点（名词叫“断点”），\n在`Build->Select target->选Debug`打勾；\n然后点调试开始，在设定好的停止点停下来；\n对了还要打开`Debug->Debugging windows->Watches`就能看到程序执行不同时期的变量值了，这样就能知道程序是如何工作的，每一步变量的值都是多少，程序的工作具体内容是啥。",
				"added": 1510063509
			},
			{
				"comment_id": 51,
				"body": "> [mcloud](#comment_22_1975Z5g8hZhSj8sco2sp5yz8gTV1NDRc4G): 不用提示他了，他不在乎其他人看着方不方便以及有什么看法和建议。对于一个总是觉得自己想的才是对的人，你说什么都没用的。\n> 不过愿意写点东西分享，总比没有好得多，值得鼓励。\n\n# 我并没有说过，我是对的啊。？",
				"added": 1510116256
			},
			{
				"comment_id": 52,
				"body": "> [beh](#comment_1_1KE6QzDGuakKW6pq53TutgxgVVuTC5pMp7): socket不是协议，tcp,udp才是协议。建议楼主先看《tcp/ip详解》\n\n###~~嗯，我知道。我就是很喜欢夸大和胡说罢了。~~",
				"added": 1510116302
			},
			{
				"comment_id": 53,
				"body": "> [toxgroup](#comment_4_1E5me51vgo83Jjap7k2cWSXSTZBPpagVfk): 支持！\n\n谢谢",
				"added": 1510116326
			},
			{
				"comment_id": 55,
				"body": "##没看我说是一起从零开始学习吗？\n##你们的要求太高了吧。\n##还不能出错。我又不是个砖家，也不是个在这装有学历有文化的非民科。我就是这世界上最没文化，连个字都不认的人，和我较什么劲。",
				"added": 1510119368
			},
			{
				"comment_id": 56,
				"body": "# 反而那些什么百度贴吧里的脑残只会追女盆友的贴子，没见你们这群人去刁难。\n# 真是活见鬼了。你们这帮人啊。才是暴露了**内心**。\n# 我想那种贴子，你们也不敢去~~BB~~吧。",
				"added": 1510119733
			},
			{
				"comment_id": 57,
				"body": "# 我知道很多人看不不爽，想把这里也变成贴吧一样，只会追女盆友的地方。",
				"added": 1510120103
			},
			{
				"comment_id": 58,
				"body": "# 既然很多人觉的自己不全是对的，这么理智，为什么你们不让我也学习学习，弄点干货什么的出来，网上的水货太多了。不知道是个啥原因，反正咱是没什么文化，不清楚真相。",
				"added": 1510120865
			},
			{
				"comment_id": 59,
				"body": "> [r3df0x](#comment_57_1NZsz5ugkzg27d9jmc8qrT9GxcLZdiuBGP): 精神上支持。核心技术在流量混淆上。服务端客户端，目前很多都是这么玩的。有功夫多研究下0net，无连接状态下就可以通讯的技术。\n~~流量混淆就是把流量都弄成不一样长度和加密乱码的吧。我自己瞎想的。要是不对的话，请不要喷我。\n无连接怎么通讯，最基本也要有个连接。主要，能把每台电脑的客户端都可以开发成一个万能的节点，节点和节点之间可以互相连接，断开，再寻找新的节点，每个节点都在不停的找新的无关节点。现在很有很多这样的动画了。节点不停的在连、断、连、断，不停的找新的节点，一个节点下线了，和它连着的节点再去找其它上线的节点，只要整个互联网中有大量活着的节点，就会不停的互相连接到一起。~~\n\n> [puro](#comment_33_19wMFS5AMRnmgwybFryDJ6MwnWji1S1HKv): 太感谢了！支持一个！\n\n不客气，哈哈。",
				"added": 1510333366
			},
			{
				"comment_id": 60,
				"body": "https://github.com/ApOgEE/mingw-c-socket/blob/master/main.c\n分析一下这个程序里的一个小细节。\n\t`// -5 is to consider the %s %s %s in tpl and the ending \\0`\n\t`query = (char *)malloc(strlen(host)+strlen(getpage)+strlen(USERAGENT)+strlen(tpl)-5);`\n这里为什么是-5，不是-6或-7，直观上看应该-6，`%s%s%s`一共多占了6个字符，但是因为整个字符串最后有个结束符`\\0`，所以少减1个字符（也是1个字节，一个8位2进制），所以就是-5了，留1个字符空位写`\\0`。\n这是为了谨慎起见，不过，我想如果不-5，就多申请一点内存空间，是不是并不影响，所以说可以不用算这么谨慎，不用-5。\n`query = (char *)malloc(strlen(host)+strlen(getpage)+strlen(USERAGENT)+strlen(tpl));`\n写成这样。\n为了蒸腾明白这点，又是单步，又是看内存内容，单步看变量变化，连寄存器也看了一下。google。\n最后算是弄的相对全面一点。\nC C++这种东西，万能，但有一点难点，就是不同编译器、不同系统平台，可能操作代码和硬件资源会有很多不同之处。不过我又不是搞这吃饭。只是消磨时间，所以，我还是喜欢用c c++。\nC C++这种东西，更多的只是一种协议规范，说白了就是公式。而它们的实现，是各大软件公司自己编写的，所以不同的编译器和操作系统内核，就会有很多不同之处。也就是说，C C++官方给出的东西，只是它们的语言方案，而具体实现，需要有人去把方案写成软件，也就是说C C++官方只是提出了一种设想，并没有去实现C C++的编程软件。",
				"added": 1510333880
			},
			{
				"comment_id": 61,
				"body": "`// setup remote socket`\n\t`remote = (struct sockaddr_in *)malloc(sizeof(struct sockaddr_in *));`\n又研究了一下这段代码，发现malloc申请的内存空间，并不够用，只有4个字节，可是需要16个字节，我就又单步了一下这个内存被操作的过程，发现存储的内容已经超出来所申请的内存大小，这就意为着，存储在外面的数据很可能会被改写或丢失，还有就是可以乱写别人的内存区域，很乱，程序也并不报警，这说明操作系统内核对每个变量占有的内存并没有保护作用，只有记录和分配作用，这就导致很容易内存会被改写。\n\t`// setup remote socket`\n\t`remote = (struct sockaddr_in *)malloc(sizeof(struct sockaddr_in));`\n我认为应该改成这样的代码，才能有足够的内存使用。",
				"added": 1510480654
			},
			{
				"comment_id": 62,
				"body": ">我发现并不需要专门看markdown语法。\n很简单，点`修改`，然后看到`?`号，点它，就看到**markdown**语法喽。\n四不四很~~简单~~噢。",
				"added": 1510480793
			},
			{
				"comment_id": 64,
				"body": "> [shc](#comment_4_14FpUVrcjTU2Lq5rUKEjF5sK5VqLHckyd6): 希望楼主造福人类吧\n\n#~~要看的资料超多和工具的使用熟练度，全人类都应该一起努力才可以了。~~",
				"added": 1510497801
			},
			{
				"comment_id": 65,
				"body": "**一个小小的注意事情，想要写个socket程序，有个问题，就是本地的哪个端口可以被使用，没有被占用，这是个小问题，也是个不解决就不行的小问题。所以google了一下，java是这样解决的。**\n有时候需要判断本地的某一个端口号是否被占用，网上通用的一种方法是：\n`public boolean isPortAvailable(int port) {`\n    `try {`\n        `ServerSocket server = new ServerSocket(port);`\n        `System.out.println(\"The port is available.\");`\n        `return true;`\n   ` } catch (IOException e) {`\n    `System.out.println(\"The port is occupied.\");`\n   ` }`\n   ` return false;`\n`}`\n通过新建一个ServerSocket来判断端口是否被占用，但是实际上这个检测方式是有漏洞的，有些情况不能够覆盖得到。例如，一个运行在WebLogic之上的应用它的端口为8406，则通过命令\n`netstat -aon | findstr 8406`\n得到的结果可能为：\n`TCP    192.168.1.101:8406    111.111.111.111:80     SYN_SENT        112`\n可见8406绑定的内部IP地址为本机的IP地址192.168.1.101，这时通过如上的方式得到的结果为这个端口没有被使用。原因在于通过ServerSocket建立的连接绑定的IP为0.0.0.0，这一小小的差异导致了如上方法没有通用性，找到一种比较好的方法为：\n`private void bindPort(String host, int port) throws Exception {`\n    `Socket s = new Socket();`\n    `s.bind(new InetSocketAddress(host, port));`\n    `s.close();`\n`}`\n`public boolean isPortAvailable(int port) {`\n    `Socket s = new Socket();`\n    `try {`\n        `bindPort(\"0.0.0.0\", port);`\n        `bindPort(InetAddress.getLocalHost().getHostAddress(), port);`\n       ` return true;`\n   ` } catch (Exception e) {`\n        `return false;`\n   ` }`\n`}`\n通过一个socket分别尝试去绑定0.0.0.0和本机IP上的port，当这两个port都可以被绑定时，则这个端口真的没有被占用。在linux上这一方法同样适用，但是有一种情况需要注意，当本机通过hostname不能解析到本机的IP地址时InetAddress.getLocalHost().getHostAddress()这个函数会抛错，导致从结果来看端口被占用着。因此需要确保在/etc/hosts文件中存在着这么一条映射：\n`<hostname> <local_ip>`\n`<hostname>`为你在终端执行hostname返回的本机名，`<local_ip>`则为在终端执行ifconfig得到的本机真实IP，JAVA提供的这个函数会去这个文件中找`<hostname>`对应的IP地址，不然会因为找不到而抛错。确保这一条之后，在linux上也能正确检测指定端口的占用情况~\n**可见这个就是去绑定端口号，从而判断端口号是否被占用，如果占用再换另一个端口号，而一台计算机所拥有的端口号有65535个。**\n**C++方法：（还有一个方法就是用一个现成的函数实现）**\nhttp://blog.csdn.net/QHH_QHH/article/details/50379822\n利用GetTcpTable/GetUdpTable这两个函数检测端口占用情况。如果这两个函数还是不行，再用上面最开始的方法，去绑定端口来检测端口是否被占用。\n##MinGW C语言的GetTcpTable函数在`...\\CodeBlocks\\MinGW\\include\\iphlpapi.h`文件里。\n第57行`DWORD WINAPI GetTcpTable(PMIB_TCPTABLE,PDWORD,BOOL);`\n##微软官方GetTcpTable解释：https://msdn.microsoft.com/en-us/library/windows/desktop/aa366026%28v=vs.85%29.aspx?f=255&MSPPError=-2147217396\n**而另一个关于端口复用的经验：**\nhttps://segmentfault.com/q/1010000003101541",
				"added": 1510562333
			},
			{
				"comment_id": 66,
				"body": "> [lava](#comment_13_1KyNzrBTMpi7LSmsrjnKS6mf15jRuFFN4H): windows  网络开发 的资料 多不多？我一直想做一个 重定向流量的 东西，可是 windows 上貌似只有 netsh相关的一些资料\n> 感觉涉及底层的还是LINUX 资料多一些\n\n客户端访问你的服务器后，你的服务器程序重新把客户端的数据传给另一个服务器地址上吗？这不就是个代理吗？代理网络上的数据流量，在客户端和服务器都不需要什么密秘的东西吧，不管是客户端还是服务端，所暴露的东西只有ip和端口吧，只是路上的数据需要好好研究一下。\n而路上的数据包内容格式，是和客户端服务端机器无关的东西吧。\n##另外，如果你真的想在windows里控制硬件，也是有很多笨办法的。\n资料不愁多少，问题是windows先天性底层资源分配不好。哈哈",
				"added": 1510566673
			},
			{
				"comment_id": 67,
				"body": "> [lava](#comment_14_1KyNzrBTMpi7LSmsrjnKS6mf15jRuFFN4H): 是的。类似代理，是服务器重定向用户流量到本机查过一阵子文档，没有什么有用的发现，所以放弃了\n\n我认为就是把用户的TCP包在服务器接收存在变量里，然后发给另一台ip上的计算机。\n具体接收方法，就是在服务器一个指定端口接收，然后随便分配另一个端口发到另一个ip计算机上的指定端口上。\n计算机就是ip、端口当地址，地址端口后面放数据。（机器地址mac地址，只在局域网里用）\n#internet网络信息送信的方法，就像这样`ip 端口 数据`这样送信。原理`信封地址 房间号 信内容` tcp udp http 等都是各种数据（信内容）的不同格式，也可以自己定义各种不同的数据格式。",
				"added": 1510670895
			},
			{
				"comment_id": 73,
				"body": "> [lava](#comment_15_1KyNzrBTMpi7LSmsrjnKS6mf15jRuFFN4H): 你是说 在服务器上 开一个端口 接收任意的 用户数据包 之后  原样传递给 第三方服务器？\n> 那么第三方服务器 如何实现  对用户的相应呢？\n> 自己从头写一个 服务程序超出我的能力了 工作量太大\n\n* 第三方服务器收到数据，按数据内容响应。\n  * 第三方服务器会监听端口，有数据，就接受，然后程序进行分析，响应。Socket接口操作呗，还能是什么响应。你连Socket是什么都不懂吗。你愿意在服务器上再写个加解密你就写呗。\n     * 具体响应，就是现实邮局系统，从河北到山东，再从山东转运上海收件人。\n     * 收件人收到信后，写回信，发给山东转运，再到河北收件人手里。\n* 工作量大，就别弄了。我也累了。\n   * 都不会写代码。\n   * 都自己弄，到处查资料。\n       * 累，中毒。",
				"added": 1511168281
			},
			{
				"comment_id": 74,
				"body": "> [lava](#comment_16_1KyNzrBTMpi7LSmsrjnKS6mf15jRuFFN4H): 你说的我 一开始也是这么想的但是 服务器 如果对连接的 客户端有认证怎么办呢？\n> 比如正常的简化流程是这样的：A <------> B\n> 现在 中间重定向的C服务器信息 不做任何特殊处理，透传A B 二者之间的 流量？A <-------C------> B\n\n有什么认证不重要吧，服务器要看什么情况吧，别说你要访问的服务器是别人设了你不知道的密码的，那和代理技术无关，那叫黑客技术。\n代理技术只存在于公共服务器，中间你自己的服务器不算。\n中间你自己的服务器，搞清楚TCP/IP的协议包内容就可以，这个和系统无关吧。\n时间和精力问题暂时不算技术问题了吧。",
				"added": 1511293358
			},
			{
				"comment_id": 75,
				"body": "> [lava](#comment_23_1KyNzrBTMpi7LSmsrjnKS6mf15jRuFFN4H): 我ssh登录的时候 发现会判断服务器指纹不知道 其他场景会不会也有判断\n> 现在看来，可能是我想太多了吧\n\n可以监控一下流量内容，看看系统自身是怎么通信的。",
				"added": 1512646780
			},
			{
				"comment_id": 76,
				"body": "> [bruceshit](#comment_5_16LevgM81YcLYVYebEkoLKhAbgmeezzqjb): 要从分析python或者C#那个源代码入手，分析完了思路就出来了，我正在这么计划\n\n也是个办法，我想先摸索一下，也不用它赚钱，就是玩玩而已。\n装了个python3.X的，还不支持2.X版本语法。",
				"added": 1512646915
			},
			{
				"comment_id": 77,
				"body": "> [lava](#comment_23_1KyNzrBTMpi7LSmsrjnKS6mf15jRuFFN4H): 我ssh登录的时候 发现会判断服务器指纹不知道 其他场景会不会也有判断\n> 现在看来，可能是我想太多了吧\n\n`b'CONNECT www.baidu.com:443 HTTP/1.1\\r\\nHost: www.baidu.com:443\\r\\nProxy-Connection: keep-alive\\r\\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\\r\\n\\r\\n'b'CONNECT www.baidu.com:443 HTTP/1.1\\r\\nHost: www.baidu.com:443\\r\\nProxy-Connection: keep-alive\\r\\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\\r\\n\\r\\n'`\n这是我监控127.0.0.1:1080本地代理上的，在浏览器里输入`www.baidu.com`回车后的网络数据。\n`if __name__ == '__main__':  `\n `   import socket  `\n `   sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  `\n`    sock.bind((\"0.0.0.0\", 1080))  `\n`    sock.listen(1)  `\n`    while True:`\n`        print(\"OK.....................\")`\n`        connection,address = sock.accept()`\n`        print(\"OK..........ok...........\")`\n`        try:`  \n`            # connection.settimeout(5)`  \n`            buf = connection.recv(10240)`  \n`            connection.send(b'HTTP/1.1 200 Connection Established\\r\\n\\r\\n') # 回应客户端浏览器, http代理服务器已准备好` \n`            if buf:`  \n`                print('%s'%buf)`\n`            else:`  \n`                print(\"error\") `\n`        except socket.timeout:`  \n`            print ('time out')`  \n`        connection.close()`\n`    sock.close()`\npython 3.6.3\n###根据这个小代码的原理，可以改一下c语言，成这个原理，加点加密解密转发，就是个http加密代理服务器了。",
				"added": 1512648829
			},
			{
				"comment_id": 78,
				"body": "> [bruceshit](#comment_8_16LevgM81YcLYVYebEkoLKhAbgmeezzqjb): 我Python版SS加密程序看不太懂，DNS解析那部分也是云里雾里的，SSR的协议混淆啥的感觉都很难，看来水平太差，要学的东西太多\n\n你是单步调试看得么？~~debugger一步一步看的话，应该相对容易些。~~还有DNS解析？翻出去了，用的是外国服务器直接访问youtube.com，还有dns干嘛？国内客户机发出去的都是加密的，根本就没有youtube.com的地址了，到了外国服务器解密后，才能看到youtube.com的地址呢。是不是把服务器上的转发功能起了个DNS高大上解析的名字。\n##~~我今天试了一下python3.6.X单步debugger，还是挺有用的。~~有些不明白的baidu/google一下。不能着急。一点点来。\n他那个python的ss代码别不能用就行。就怕是个报废的代码，调试半天也找不出问题。本身程序就有问题。找点靠谱的代码看。\n很多初级入门的学生，最怕的就是找了一堆错的方法去做。只要生活环境可以，没太大压力和别的事，一般现在这么多资料，对于翻墙来说还不是很困难的事。代理程序代码一抓一大把，我这几天搜了一下，资源很多。\n## 推荐用[Pycharm免费Community版本](https://www.jetbrains.com/pycharm/download/#section=windows)来调试python程序。",
				"added": 1512930887
			},
			{
				"comment_id": 80,
				"body": "> [bruceshit](#comment_8_16LevgM81YcLYVYebEkoLKhAbgmeezzqjb): 我Python版SS加密程序看不太懂，DNS解析那部分也是云里雾里的，SSR的协议混淆啥的感觉都很难，看来水平太差，要学的东西太多\n\n他就算用了DNS，也可能是怕走国内的DNS被污染，直接走到他的服务器上去找DNS服务，然后不管国内客户机去哪个网站，因为国内客户机访问的是这台服务器，所以DNS服务自己解析自己的地址给客户机，都把地址指到ss自己服务器上的端口上，然后服务器给国内客户机转数据流。\n这个问题，需要去找找DNS相关的协议，或者可以自己试试用Wireshark抓DNS协议看看。\n如果ss服务器直接用ip地址，不用域名，可能不用DNS解析吧。\n不太清楚DNS是不是还会给国内客户机指定路由路线，我想应该不会，不是国家DNS，谁能知道具体路由路线呢。可能也就是在国外访问别的国外DNS去查IP地址。\n他这个用自己的DNS方法还真有些效果，的确可以减少一下危险，不过不知道会不会成为一种特征呢，所以这个还要研究研究，不是很清楚，但应该不是什么大问题。慢慢来",
				"added": 1512934184
			}
		],
		"1_1BbJyTZLpZpRfnm9qXeWBa2byxBuhNnHJV": [
			{
				"comment_id": 22,
				"body": "> [arith](#comment_3_1ARf4SpYy1bTHXDAEyXVmEbxrcvVreUaNF): 远程桌面服务的特征非常明显，封起来比你想象的要简单。\n\n可是如果在远程装个qq，用qq远程，要是封的话，把所有qq也都封了，除非不让外国人用qq。",
				"added": 1509806012
			}
		],
		"1_1Ki3HYqzaNr3BMKP34wTz9xLnVsAXENw4b": [],
		"1_15egberD2AKxmhDhrWz8xCjDKpFeAaS4nn": [
			{
				"comment_id": 68,
				"body": "原理可能就是没有固定的ip地址。GFW总不能把世界上的ip全封了吧，那不如把电话线断了。",
				"added": 1510733396
			}
		],
		"1_19wMFS5AMRnmgwybFryDJ6MwnWji1S1HKv": [
			{
				"comment_id": 69,
				"body": "因为很多人都想看你像个小丑一样信人生有意义。也或许有些人就是个小丑，还不知道被人坑了。",
				"added": 1510734960
			}
		],
		"2_1AVSVSVZswWGFsbTLRumjG7HT2btZtt2fM": [
			{
				"comment_id": 70,
				"body": "我很想知道，杨教授有没有微信，是不是天天泡在微信上。\n他们只是不想让你上微信，他们上微信胡说。",
				"added": 1510735044
			},
			{
				"comment_id": 71,
				"body": "很多人不在乎你说什么，他们只是想把你排挤掉，用各种理由。照这样下去，这里又变成互联网了。他们随地大小便都正常，就不许你拉撒。现在中国封网，全是这些自以为是的中国人造成的。他们拥有共同的特征，自信。",
				"added": 1510753478
			}
		],
		"2_19wMFS5AMRnmgwybFryDJ6MwnWji1S1HKv": [],
		"2_16LevgM81YcLYVYebEkoLKhAbgmeezzqjb": [
			{
				"comment_id": 79,
				"body": "蓝灯、赛风，现在都行，翻出去到google+，有很多免费ss ssr的群。\n用tor加蓝灯、赛风、ss翻墙非常安全。",
				"added": 1512931378
			}
		]
	},
	"comment_vote": {
		"127_1A5Uw4pejzgKx4c3yZkz8whBcqMaypp1Wo": 1,
		"77_1FZ9iY7CzoVM7VsGFdxUxwqb6z5UY4ge4d": 1,
		"90_12e4EcUWaMHVa31rkuzWWxstByasqAp7RV": 1
	}
}