{
	"next_topic_id": 1,
	"topic": [],
	"topic_vote": {},
	"next_comment_id": 7,
	"comment": {
		"1_1PMug8RWw6a7ydP6pgzD9hft5ec4jwVbWh": [
			{
				"comment_id": 1,
				"body": "并没有打包。unix下面一个sh script就可以启动。windows下面有类似的script",
				"added": 1491808737
			}
		],
		"3_1LC4DEAP6CnvREPUtq3D9ti8T8Y2teeY6p": [
			{
				"comment_id": 2,
				"body": "大家全部用dht不就完了，做tracker是重复造轮子啊",
				"added": 1491808959
			}
		],
		"1_18siMKLgnhAQP525vKpZ3iX21VwJ5qvXwy": [
			{
				"comment_id": 3,
				"body": "这跟互联网的开始是相似的 -- 全都是纯文本的网页，又没有电视剧电影游戏，后来互联网是如何火起来的呢？ \n答曰慢慢火起来的",
				"added": 1491839767
			}
		],
		"1_14dbgDWd5ySmUZjHzwsF1JxDiZoPfQWttb": [
			{
				"comment_id": 4,
				"body": "> [shootingsonic](#comment_6_14dbgDWd5ySmUZjHzwsF1JxDiZoPfQWttb): 请原谅我第二个愚蠢的问题，我忘了Torrent本来就可以透过udp传输。那，可否像DNS隧道一样来“借用”其他形式的协议来包装torrent的UDP传输？\n\n你如果知道udp 和 tcp的区别的话，你就知道你的问题就是问如何在udp上面重写一个tcp。大部分文件都是不能容忍缺块之类的问题的，也就是你要用udp保证顺序和完整。。如何保证呢？要不回到tcp，要不重写一个同等作用，不同实现的tcp",
				"added": 1491840047
			}
		],
		"1_1DF7Sa6AkoLxZNPq5FSn3kAadKHfye9K6P": [
			{
				"comment_id": 5,
				"body": "> [frog](#comment_33_1D9PFKqnik1Z4JtDZnYhyQERZAu5ZiXqFX): 如果不关心输出, 试试python zeronet.py >/dev/null 2>&1 </dev/null &\n\n这个要加 nohup 在前面",
				"added": 1491840885
			}
		],
		"26_12kcMDfKMos1marvnhfduW5aBbwXcPV2ka": [
			{
				"comment_id": 6,
				"body": "> [zerocatty](#comment_116_1DcMmKhgdfkR1GDA6zhWhoFRreaej4wLmW): bttracker服务器你架设过么？对服务器要求高么？\n\nbttracker 响应http 请求，就跟一个网络服务器无区别。请求数量你可以自己猜一下，但是单个请求还不那么占资源。",
				"added": 1491841039
			}
		]
	},
	"comment_vote": {}
}